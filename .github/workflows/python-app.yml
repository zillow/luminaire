# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Luminaire CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        python-version: ['3.6', '3.7', '3.8'] # 3.9 build currently failing
    name: Build for python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Cache Dependencies
      id: cache
      uses: actions/cache@v2
      with:
        # os independent path
        path: ${{ env.pythonLocation }}
        # Look to see if there is a cache hit for the corresponding python location and requirements file
        key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}

    - name: Install Dependencies
      run: |
        # we need to build proper wheel for scikit-learn 0.19.2 on python 3.8
        # cacheless run will be slow, but next ones will use wheel
        # if we skip wheel build - scikit-learn will be build from source each time
        # if is as slow as initial wheel build up but for every run
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install numpy==1.17.5 # scipy need numpy on wheel build step, using same from requirements.txt
        python -m pip install scipy==1.2.3 # scikit-learn need numpy and scipy on wheel build step, using same from requirements.txt
        python -m pip install flake8 pytest # test and linting dependencies
        if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi

    - name: Linting with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --select=E9,F63,F7,F82 --show-source || exit 1
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        echo "================================ Lint warnings =============================="
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest
